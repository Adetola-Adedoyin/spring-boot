name: CI/CD Pipeline

on:
  push:
    branches: [master]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VERSION: 1.8.0

jobs:
  terraform-apply:
    name: Terraform Init, Plan & Apply
    runs-on: ubuntu-latest
    environment:
      name: apply-approval # âœ… Enforces manual approval before apply runs

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: devops-springboot-infra/terraform/envs/dev
        run: terraform init

      - name: Terraform Plan
        working-directory: devops-springboot-infra/terraform/envs/dev
        run: terraform plan

      # ðŸ‘‡ Real terraform apply (not from tfplan file), so outputs are saved to state
      - name: Terraform Apply
        working-directory: devops-springboot-infra/terraform/envs/dev
        run: terraform apply -auto-approve

      - name: Extract Outputs (Private Key & EC2 IP)
        id: outputs
        working-directory: devops-springboot-infra/terraform/envs/dev
        run: |
          terraform output -raw private_key_pem > private_key.pem
          echo "ec2_ip=$(terraform output -raw ec2_public_ip)" >> $GITHUB_OUTPUT

  terraform-destroy:
    name: Terraform Destroy (Manual Approval)
    runs-on: ubuntu-latest
    needs: terraform-apply
    environment:
      name: destroy-approval # âœ… Another manual approval step before destroy

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: devops-springboot-infra/terraform/envs/dev
        run: terraform init

      - name: Terraform Destroy
        working-directory: devops-springboot-infra/terraform/envs/dev
        run: terraform destroy -auto-approve
